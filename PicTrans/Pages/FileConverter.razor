@page "/FileConverter"
@inject IFileService fileService
@inject IDefaultDataService defaultDataService
@inject ISecureStorage secureStorage

<MudContainer>
    <h1 class="text-uppercase text-center">
        Convert Files
        <MudIcon Icon="@Icons.Material.Filled.Image" Title="File Download" />
    </h1>
    @if (string.IsNullOrWhiteSpace(errorMessage) is false)
    {
        <MudAlert Severity="@((Severity)Enum.Parse(typeof(Severity), alertClass))">
            @errorMessage
        </MudAlert>
    }
    <MudGrid>
        <MudItem xs="12" Class="text-center">
            <MudFileUpload T="IReadOnlyList<IBrowserFile>" FilesChanged="UploadFiles"
                           Accept=".docx,.txt,.pdf,.html,.htm">
                <ButtonTemplate>
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="MudBlazor.Color.Primary"
                               StartIcon="@Icons.Material.Filled.CloudUpload"
                               Class="w-100"
                               for="@context">
                        Multiple Files
                    </MudButton>
                </ButtonTemplate>
            </MudFileUpload>
            <MudButtonGroup Class="mt-2">
                @foreach (var p in folderPaths)
                {
                    <MudButton Class="@GetButtonClass(p)"
                               OnClick="(() => selectedFilePath = p)">
                        @p
                    </MudButton>
                }
            </MudButtonGroup>
            <MudSelect Label="Convert to:" @bind-Value="selectedFileExtension" Class="mud-input-root text-start">
                @foreach (var e in fileExtensions)
                {
                    <MudSelectItem Value="@e">@e</MudSelectItem>
                }
            </MudSelect>
            <MudText Align="Align.Center"
                     Class="mt-2">
                @progress.ToString("0")%
            </MudText>
            <MudProgressLinear Color="MudBlazor.Color.Primary"
                               Buffer="true"
                               Value="progress"
                               BufferValue="bufferValue"
                               Class="my-7" />
            <MudAutocomplete T="string" Label="Search"
                             Variant="Variant.Outlined"
                             @bind-Value="searchText"
                             SearchFunc="SearchImage"
                             AdornmentIcon="@Icons.Material.Filled.Search"
                             AdornmentColor="MudBlazor.Color.Primary"
                             OnAdornmentClick="FilterImages"
                             ResetValueOnEmptyText="true" />
            <div class="d-flex justify-content-between align-items-start">
                <MudText Align="Align.Start" Class="mt-2">@GetFilesCount()</MudText>
                <div></div> <!-- Add an empty div to create spaces -->
                <div></div> <!-- Add an empty div to create spaces -->
                <div></div> <!-- Add an empty div to create spaces -->
                <div class="center-children">
                    <MudButtonGroup Variant="Variant.Outlined" Color="MudBlazor.Color.Primary" OverrideStyles="false" Class="mt-2">
                        <div class="d-flex justify-content-center">
                            @if (files.Count > 0)
                            {
                                <MudButton 
                                    Variant="Variant.Outlined" 
                                    Color="MudBlazor.Color.Primary" 
                                    OnClick="ConvertAndDownloadFiles">
                                    Download
                                </MudButton>
                            }
                            @if (files.Count > 0)
                            {
                                <MudButton 
                                    Variant="Variant.Outlined" 
                                    Color="MudBlazor.Color.Error"
                                    OnClick="ClearFiles">
                                    Clear
                                </MudButton>
                            }
                        </div>
                    </MudButtonGroup>
                </div>
                <div></div> <!-- Add an empty div to create spaces -->
                <div></div> <!-- Add an empty div to create spaces -->
                <div></div> <!-- Add an empty div to create spaces -->
                <div></div> <!-- Add an empty div to create spaces -->
            </div>
        </MudItem>
        <MudItem xs="12">
            <MudVirtualize Items="files" Context="f" OverscanCount="10">
                <File 
                    BrowserFile="f"
                    SelectedPath="@selectedFilePath"
                    OnRemoveFile="RemoveFile" />
            </MudVirtualize>
        </MudItem>
    </MudGrid>
</MudContainer>


