@inject IDefaultDataService defaultDataService
@inject IFileService fileService
@inject IDialogService dialogService

<MudCard Class="mb-3">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@BrowserFile.Name</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="MudBlazor.Color.Default" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
        <MudText Typo="Typo.body1">Size: @BrowserFile.Size</MudText>
        <MudText Typo="Typo.body1">Last Modified: @BrowserFile.LastModified</MudText>
    </MudCardContent>
    <div class="p-2">
        <MudSelect Label="Convert to:" @bind-Value="selectedExtension" Class="mud-input-root text-start">
            @foreach (var e in fileExtensions)
            {
                <MudSelectItem Value="@e">@e</MudSelectItem>
            }
        </MudSelect>
    </div>
    <MudCardActions>
        <MudButton 
            Variant="Variant.Text" 
            Color="MudBlazor.Color.Primary"
            OnClick="ConvertAndDownloadFile">
            Convert and Download
        </MudButton>
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    [EditorRequired]
    public IBrowserFile BrowserFile { get; set; }

    [Parameter]
    [EditorRequired]
    public string SelectedPath { get; set; }

    private IDialogReference dialogReference;
    private string selectedExtension = ".txt";
    private List<string> fileExtensions = new();

    protected override void OnInitialized()
    {
        fileExtensions = defaultDataService.GetFileFormats();
    }

    private async Task ConvertAndDownloadFile()
    {
        await fileService.DownloadFileAsync(BrowserFile, SelectedPath, selectedExtension);
        OpenDialog($"Successfully downloaded {BrowserFile.Name}");
    }

    private void OpenDialog(string title)
    {
        var topCenter = new DialogOptions() { Position = DialogPosition.TopCenter, ClassBackground = "backdrop-blur" };
        dialogReference = dialogService.Show<Dialog>(title, topCenter);
    }
}
